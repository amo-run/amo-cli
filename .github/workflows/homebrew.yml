name: Publish to Homebrew Tap

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Set variables
        id: vars
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "version=${TAG}" >> $GITHUB_OUTPUT
          echo "version_without_v=${TAG#v}" >> $GITHUB_OUTPUT
          echo "url=https://github.com/${{ github.repository }}/archive/refs/tags/${TAG}.tar.gz" >> $GITHUB_OUTPUT

      - name: Calculate SHA256
        id: sha256
        run: |
          curl -L ${{ steps.vars.outputs.url }} -o source.tar.gz
          SHA256=$(shasum -a 256 source.tar.gz | awk '{print $1}')
          echo "sha256=${SHA256}" >> $GITHUB_OUTPUT
          echo "Calculated SHA256: ${SHA256}"

      - name: Generate Formula
        run: |
          mkdir -p Formula
          cat > Formula/amo.rb << 'EOF'
          class Amo < Formula
            desc "CLI tool for managing tools and running JavaScript-based workflows"
            homepage "https://github.com/${{ github.repository }}"
            url "${{ steps.vars.outputs.url }}"
            sha256 "${{ steps.sha256.outputs.sha256 }}"
            license "MIT"
            version "${{ steps.vars.outputs.version_without_v }}"

            depends_on "go" => :build

            def install
              # Set version info for build
              ldflags = %W[
                -s -w
                -X main.Version=${{ steps.vars.outputs.version }}
                -X main.GitCommit=#{Utils.git_short_head}
                -X main.BuildTime=#{Time.now.utc.strftime("%Y-%m-%dT%H:%M:%SZ")}
                -X main.BuildBy=homebrew
              ]

              system "go", "build", *std_go_args(ldflags: ldflags), "-o", bin/"amo", "."
            end

            test do
              system "#{bin}/amo", "--version"
              assert_match "amo v${{ steps.vars.outputs.version_without_v }}", shell_output("#{bin}/amo --version")
              
              # Test basic functionality
              system "#{bin}/amo", "version"
              system "#{bin}/amo", "tool", "list"
            end

            def caveats
              <<~EOS
                Getting started with amo:
                
                1. List available workflows:
                   amo workflow list
                
                2. Run a workflow:
                   amo run <workflow-name>
                
                3. Manage tools:
                   amo tool list
                
                4. Get help:
                   amo --help
                
                For more information, visit: https://github.com/${{ github.repository }}
              EOS
            end
          end
          EOF

      - name: Checkout tap repository
        uses: actions/checkout@v4
        with:
          repository: amo-run/homebrew-amo
          token: ${{ secrets.TAP_GITHUB_TOKEN }}
          path: homebrew-amo

      - name: Update formula in tap
        run: |
          # Copy the generated formula to the tap repository
          cp Formula/amo.rb homebrew-amo/Formula/amo.rb
          
          # Verify the formula syntax
          cd homebrew-amo
          brew audit --strict Formula/amo.rb || echo "Audit warnings found, but continuing..."

      - name: Commit and push to tap
        run: |
          cd homebrew-amo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git add Formula/amo.rb
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update amo formula to version ${{ steps.vars.outputs.version }}

            - Version: ${{ steps.vars.outputs.version }}
            - SHA256: ${{ steps.sha256.outputs.sha256 }}
            - Release: https://github.com/${{ github.repository }}/releases/tag/${{ steps.vars.outputs.version }}
            
            Auto-generated by GitHub Actions"
            
            git push origin main
            echo "âœ… Successfully updated Homebrew formula"
          fi

      - name: Verify installation (optional)
        if: true  # Disabled by default, enable for testing
        run: |
          # This step can be enabled for testing the formula
          brew tap amo-run/amo
          brew install amo
          amo --version
